{"identifier":{"url":"doc:\/\/PopNetworking\/documentation\/PopNetworking\/NetworkingRoute\/repeater-397rr","interfaceLanguage":"swift"},"schemaVersion":{"patch":0,"minor":3,"major":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"repeater"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:13PopNetworking0B5RoutePAAE8Repeatera","identifier":"doc:\/\/PopNetworking\/documentation\/PopNetworking\/NetworkingRoute\/Repeater-swift.typealias","text":"Repeater"},{"kind":"text","text":"? { "},{"kind":"keyword","text":"get"},{"kind":"text","text":" }"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"text":"Discussion","anchor":"discussion","type":"heading","level":2},{"syntax":"swift","code":["\/\/ example usage","let response = try await SomeNetworkingRoute(repeater: { (result, request, response, repeatCount) in","    if repeatCount < 2 && (response as? HTTPURLResponse)?.statusCode == 500 {","        return .retryWithDelay(1) \/\/ repeats the request if the server returns a 500","    } else {","        return .doNotRetry","    }","}).run"],"type":"codeListing"}]}],"defaultImplementationsSections":[{"title":"NetworkingRoute Implementations","identifiers":["doc:\/\/PopNetworking\/documentation\/PopNetworking\/NetworkingRoute\/repeater-6n17t"],"anchor":"NetworkingRoute-Implementations"}],"abstract":[{"text":"A ","type":"text"},{"type":"codeVoice","code":"Repeater"},{"text":" allows you to retry the entire request if needed. This can be used if you have to repeatedly poll an endpoint to wait for a specific status to be returned.","type":"text"}],"metadata":{"symbolKind":"property","modules":[{"name":"PopNetworking"}],"externalID":"s:13PopNetworking0B5RouteP8repeaterAA0B13RetrierResultOs0F0Oy18ResponseSerializer_16SerializedObjectQZs5Error_pG_10Foundation10URLRequestVSgSo13NSURLResponseCSgSitYaYbcSgvp","required":true,"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"repeater"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Repeater","preciseIdentifier":"s:13PopNetworking0B5RoutePAAE8Repeatera"},{"kind":"text","text":"?"}],"role":"symbol","roleHeading":"Instance Property","title":"repeater"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/popnetworking\/networkingroute\/repeater-397rr"]}],"sections":[],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/PopNetworking\/documentation\/PopNetworking","doc:\/\/PopNetworking\/documentation\/PopNetworking\/NetworkingRoute"]]},"references":{"doc://PopNetworking/documentation/PopNetworking/NetworkingRoute/Repeater-swift.typealias":{"abstract":[],"kind":"symbol","url":"\/documentation\/popnetworking\/networkingroute\/repeater-swift.typealias","identifier":"doc:\/\/PopNetworking\/documentation\/PopNetworking\/NetworkingRoute\/Repeater-swift.typealias","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Repeater","kind":"identifier"}],"title":"NetworkingRoute.Repeater","role":"symbol","type":"topic","navigatorTitle":[{"text":"Repeater","kind":"identifier"}]},"doc://PopNetworking/documentation/PopNetworking/NetworkingRoute/repeater-6n17t":{"kind":"symbol","abstract":[],"url":"\/documentation\/popnetworking\/networkingroute\/repeater-6n17t","role":"symbol","identifier":"doc:\/\/PopNetworking\/documentation\/PopNetworking\/NetworkingRoute\/repeater-6n17t","title":"repeater","type":"topic","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"repeater"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"preciseIdentifier":"s:13PopNetworking0B5RoutePAAE8Repeatera","kind":"typeIdentifier","text":"Repeater"},{"kind":"text","text":"?"}]},"doc://PopNetworking/documentation/PopNetworking/NetworkingRoute":{"kind":"symbol","title":"NetworkingRoute","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"NetworkingRoute","kind":"identifier"}],"abstract":[{"type":"reference","isActive":true,"identifier":"doc:\/\/PopNetworking\/documentation\/PopNetworking\/NetworkingRoute"},{"type":"text","text":" is responsible for declaring everything needed to create a networking request and how to parse the networking response into a generic "},{"type":"codeVoice","code":"SerializedObject"},{"type":"text","text":" object."}],"type":"topic","url":"\/documentation\/popnetworking\/networkingroute","navigatorTitle":[{"text":"NetworkingRoute","kind":"identifier"}],"identifier":"doc:\/\/PopNetworking\/documentation\/PopNetworking\/NetworkingRoute"},"doc://PopNetworking/documentation/PopNetworking/NetworkingRoute/repeater-397rr":{"title":"repeater","url":"\/documentation\/popnetworking\/networkingroute\/repeater-397rr","required":true,"role":"symbol","defaultImplementations":1,"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"repeater","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Repeater","kind":"typeIdentifier","preciseIdentifier":"s:13PopNetworking0B5RoutePAAE8Repeatera"},{"text":"?","kind":"text"}],"type":"topic","identifier":"doc:\/\/PopNetworking\/documentation\/PopNetworking\/NetworkingRoute\/repeater-397rr","abstract":[{"text":"A ","type":"text"},{"code":"Repeater","type":"codeVoice"},{"text":" allows you to retry the entire request if needed. This can be used if you have to repeatedly poll an endpoint to wait for a specific status to be returned.","type":"text"}],"kind":"symbol"},"doc://PopNetworking/documentation/PopNetworking":{"kind":"symbol","role":"collection","title":"PopNetworking","url":"\/documentation\/popnetworking","identifier":"doc:\/\/PopNetworking\/documentation\/PopNetworking","abstract":[{"text":"A protocol oriented HTTP CRUD networking layer. Built with Swift 6 and strict concurrency.","type":"text"}],"type":"topic"}}}
{"schemaVersion":{"major":0,"patch":0,"minor":3},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/popnetworking\/networkingroutefailablepublisher\/min()"]}],"kind":"symbol","primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"min","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"Publishers","kind":"typeIdentifier","preciseIdentifier":"s:7Combine10PublishersO"},{"text":".","kind":"text"},{"text":"Comparison","kind":"typeIdentifier","preciseIdentifier":"s:7Combine10PublishersO10ComparisonV"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"platforms":["macOS"]}],"kind":"declarations"}],"identifier":{"url":"doc:\/\/PopNetworking\/documentation\/PopNetworking\/NetworkingRouteFailablePublisher\/min()","interfaceLanguage":"swift"},"sections":[],"hierarchy":{"paths":[["doc:\/\/PopNetworking\/documentation\/PopNetworking","doc:\/\/PopNetworking\/documentation\/PopNetworking\/NetworkingRouteFailablePublisher"]]},"metadata":{"extendedModule":"Combine","roleHeading":"Instance Method","title":"min()","role":"symbol","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Output"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Comparable"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"symbolKind":"method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"min"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Combine10PublishersO","text":"Publishers"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:7Combine10PublishersO10ComparisonV","text":"Comparison"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"platforms":[{"deprecated":false,"name":"iOS","unavailable":false,"beta":false,"introducedAt":"13.0"},{"deprecated":false,"name":"macOS","unavailable":false,"beta":false,"introducedAt":"10.15"},{"deprecated":false,"name":"tvOS","unavailable":false,"beta":false,"introducedAt":"13.0"},{"deprecated":false,"name":"watchOS","unavailable":false,"beta":false,"introducedAt":"6.0"}],"externalID":"s:7Combine9PublisherPAASL6OutputRpzrlE3minAA10PublishersO10ComparisonVy_xGyF::SYNTHESIZED::s:13PopNetworking0B22RouteFailablePublisherV","modules":[{"relatedModules":["Combine"],"name":"PopNetworking"}]},"abstract":[{"type":"text","text":"Inherited from "},{"code":"Publisher.min()","type":"codeVoice"},{"type":"text","text":"."}],"references":{"doc://PopNetworking/documentation/PopNetworking/NetworkingRouteFailablePublisher/min()":{"identifier":"doc:\/\/PopNetworking\/documentation\/PopNetworking\/NetworkingRouteFailablePublisher\/min()","type":"topic","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Output","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Comparable","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"title":"min()","kind":"symbol","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"min","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"Publishers","kind":"typeIdentifier","preciseIdentifier":"s:7Combine10PublishersO"},{"text":".","kind":"text"},{"text":"Comparison","kind":"typeIdentifier","preciseIdentifier":"s:7Combine10PublishersO10ComparisonV"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"url":"\/documentation\/popnetworking\/networkingroutefailablepublisher\/min()","abstract":[]},"doc://PopNetworking/documentation/PopNetworking/NetworkingRouteFailablePublisher":{"identifier":"doc:\/\/PopNetworking\/documentation\/PopNetworking\/NetworkingRouteFailablePublisher","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"NetworkingRouteFailablePublisher"}],"navigatorTitle":[{"kind":"identifier","text":"NetworkingRouteFailablePublisher"}],"kind":"symbol","type":"topic","title":"NetworkingRouteFailablePublisher","abstract":[{"type":"text","text":"A Combine Publisher for a "},{"isActive":true,"identifier":"doc:\/\/PopNetworking\/documentation\/PopNetworking\/NetworkingRoute","type":"reference"},{"type":"text","text":". This publisher can fail, and the failure is whatever error comes back from running the "},{"isActive":true,"identifier":"doc:\/\/PopNetworking\/documentation\/PopNetworking\/NetworkingRoute","type":"reference"},{"type":"text","text":". The successful "},{"code":"Output","type":"codeVoice"},{"type":"text","text":" is the "},{"code":"NetworkingRoute.ResponseSerializer.SerializedObject","type":"codeVoice"}],"url":"\/documentation\/popnetworking\/networkingroutefailablepublisher","role":"symbol"},"doc://PopNetworking/documentation/PopNetworking/NetworkingRoute":{"kind":"symbol","url":"\/documentation\/popnetworking\/networkingroute","title":"NetworkingRoute","abstract":[{"identifier":"doc:\/\/PopNetworking\/documentation\/PopNetworking\/NetworkingRoute","isActive":true,"type":"reference"},{"text":" is responsible for declaring everything needed to create a networking request and how to parse the networking response into a generic ","type":"text"},{"code":"SerializedObject","type":"codeVoice"},{"text":" object.","type":"text"}],"type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"NetworkingRoute","kind":"identifier"}],"identifier":"doc:\/\/PopNetworking\/documentation\/PopNetworking\/NetworkingRoute","role":"symbol","navigatorTitle":[{"text":"NetworkingRoute","kind":"identifier"}]},"doc://PopNetworking/documentation/PopNetworking":{"title":"PopNetworking","kind":"symbol","url":"\/documentation\/popnetworking","identifier":"doc:\/\/PopNetworking\/documentation\/PopNetworking","role":"collection","type":"topic","abstract":[{"type":"text","text":"A protocol oriented HTTP CRUD networking layer. Built with Swift 6 and strict concurrency."}]}}}